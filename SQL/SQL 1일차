
DROP TABLE DEPT c;
CREATE TABLE DEPT
       (DEPTNO NUMBER(2) CONSTRAINT PK_DEPT PRIMARY KEY,
	DNAME VARCHAR2(14) ,
	LOC VARCHAR2(13) ) ;
DROP TABLE EMP;
CREATE TABLE EMP
       (EMPNO NUMBER(4) CONSTRAINT PK_EMP PRIMARY KEY,
	ENAME VARCHAR2(10),
	JOB VARCHAR2(9),
	MGR NUMBER(4),
	HIREDATE DATE,
	SAL NUMBER(7,2),
	COMM NUMBER(7,2),
	DEPTNO NUMBER(2) CONSTRAINT FK_DEPTNO REFERENCES DEPT);
INSERT INTO DEPT VALUES
	(10,'ACCOUNTING','NEW YORK');
INSERT INTO DEPT VALUES (20,'RESEARCH','DALLAS');
INSERT INTO DEPT VALUES
	(30,'SALES','CHICAGO');
INSERT INTO DEPT VALUES
	(40,'OPERATIONS','BOSTON');
INSERT INTO EMP VALUES
(7369,'SMITH','CLERK',7902,to_date('17-12-1980','dd-mm-yyyy'),800,NULL,20);
INSERT INTO EMP VALUES
(7499,'ALLEN','SALESMAN',7698,to_date('20-2-1981','dd-mm-yyyy'),1600,300,30);
INSERT INTO EMP VALUES
(7521,'WARD','SALESMAN',7698,to_date('22-2-1981','dd-mm-yyyy'),1250,500,30);
INSERT INTO EMP VALUES
(7566,'JONES','MANAGER',7839,to_date('2-4-1981','dd-mm-yyyy'),2975,NULL,20);
INSERT INTO EMP VALUES
(7654,'MARTIN','SALESMAN',7698,to_date('28-9-1981','dd-mm-yyyy'),1250,1400,30);
INSERT INTO EMP VALUES
(7698,'BLAKE','MANAGER',7839,to_date('1-5-1981','dd-mm-yyyy'),2850,NULL,30);
INSERT INTO EMP VALUES
(7782,'CLARK','MANAGER',7839,to_date('9-6-1981','dd-mm-yyyy'),2450,NULL,10);
INSERT INTO EMP VALUES
(7788,'SCOTT','ANALYST',7566,to_date('13-7-1987','dd-mm-yyyy'),3000,NULL,20);
INSERT INTO EMP VALUES
(7839,'KING','PRESIDENT',NULL,to_date('17-11-1981','dd-mm-yyyy'),5000,NULL,10);
INSERT INTO EMP VALUES
(7844,'TURNER','SALESMAN',7698,to_date('8-9-1981','dd-mm-yyyy'),1500,0,30);
INSERT INTO EMP VALUES
(7876,'ADAMS','CLERK',7788,to_date('13-7-1987','dd-mm-yyyy'),1100,NULL,20);
INSERT INTO EMP VALUES
(7900,'JAMES','CLERK',7698,to_date('3-12-1981','dd-mm-yyyy'),950,NULL,30);
INSERT INTO EMP VALUES
(7902,'FORD','ANALYST',7566,to_date('3-12-1981','dd-mm-yyyy'),3000,NULL,20);
INSERT INTO EMP VALUES
(7934,'MILLER','CLERK',7782,to_date('23-1-1982','dd-mm-yyyy'),1300,NULL,10);
DROP TABLE BONUS;
CREATE TABLE BONUS
	(
	ENAME VARCHAR2(10)	,
	JOB VARCHAR2(9)  ,
	SAL NUMBER,
	COMM NUMBER
	) ;
DROP TABLE SALGRADE;
CREATE TABLE SALGRADE
      ( GRADE NUMBER,
	LOSAL NUMBER,
	HISAL NUMBER );
INSERT INTO SALGRADE VALUES (1,700,1200);
INSERT INTO SALGRADE VALUES (2,1201,1400);
INSERT INTO SALGRADE VALUES (3,1401,2000);
INSERT INTO SALGRADE VALUES (4,2001,3000);
INSERT INTO SALGRADE VALUES (5,3001,9999);

COMMIT;
ROLLBACK;
--transaction 

SET TERMOUT ON
SET ECHO ON

SELECT  * FROM DEPT;

SELECT  EMPNO AS 넘버 ,ENAME AS 이름,JOB AS 직업 FROM EMP;
SELECT DISTINCT  deptno AS 부서번호 FROM EMP;
--DISTINCT 중복제거
-- A AS B : A를 B로 변경
SELECT  * FROM EMP;
--|| :연결 연산자 
SELECT CONCAT(ename,job) AS "이름 / 직책" FROM emp;
SELECT ENAME||' / '||JOB AS "이름 / 직책"  FROM EMP;
SELECT ENAME||'의 직책은 '||JOB ||'이고 월급은 '|| SAL||'입니다'  AS "이름 / 직책 / 월급"  FROM EMP;

SELECT Ename AS "이름" , SAL AS "월급",'$'||sal*12 AS "연봉"  FROM EMP WHERE ename='ADAMS' AND EMPNO =7876;
                              --값은 대소문자 구분함
--SELECT  *FROM  users WHERE  id=? AND password =?;
SELECT Ename AS "이름" , SAL AS "월급",NVL(COMM,0) AS "보너스",'$'||(sal*12+COMM)  AS "연봉"  FROM EMP WHERE ename='MARTIN';

SELECT Ename AS "이름" , SAL AS "월급",NVL(COMM,0) AS "보너스",'$'||(sal*12+NVL(COMM,0))  AS "연봉"  FROM EMP;
--NVL(A, B)  A테이블에서 NULL값을 B로 변경하는 함수

SELECT *FROM emp WHERE sal>=1000 AND sal <= 2500;
--SELECT * FROM board WHERE NO>=1 AND NO <=10;

SELECT  *FROM emp WHERE sal BETWEEN 1000 AND 2500;
--BETWEEN a AND b : a와 b사이의 값을 나타낸다. (a와 b값도 포함)

SELECT *  FROM EMP ORDER BY sal DESC, DEPTNO ASC;
--ORDER by (ASC:디폴트값): 순서대로 (desc : 순서를 바꿀때)

SELECT  * FROM EMP WHERE DEPTNO =30;
SELECT  *  FROM EMP WHERE DEPTNO =30 AND JOB ='SALESMAN';
SELECT  *  FROM EMP WHERE DEPTNO =30 AND JOB ='CLERK';

SELECT ENAME AS "이름" ,SAL*12 AS "연봉" FROM  EMP WHERE  ((SAL*12)+NVL(COMM,0))>=30000 ORDER BY SAL desc;
SELECT  *  FROM  EMP WHERE  ENAME >'F' ORDER BY ENAME ;
SELECT  *  FROM  EMP WHERE JOB='MANAGER' OR JOB='SALESMAN' OR JOB='CLERK';
SELECT  * FROM  EMP WHERE JOB IN('MANAGER','SALESMAN','CLERK'); --위에 식과 같은 결과, IN(a,b,c) a이거나, b이거나,c인 조건

SELECT  *  FROM  EMP WHERE JOB !='MANAGER' AND JOB !='SALESMAN' AND JOB !='CLERK';
SELECT  * FROM  EMP WHERE NOT JOB ='MANAGER' AND NOT JOB ='SALESMAN' AND NOT JOB='CLERK';
SELECT  * FROM  EMP WHERE JOB NOT IN('MANAGER','SALESMAN','CLERK');
-- NOT A : A이 아닌 모든 값

SELECT  *FROM  EMP WHERE HIREDATE > '1980/1/1';

SELECT *FROM  emp WHERE COMM IS NULL;
SELECT *FROM  emp WHERE COMM IS not NULL;
-- null은 연산자 사용못함.=> IS NULL:null값을 찾아준다.

SELECT *FROM emp WHERE ENAME LIKE '%ER'; --이름이 er이 들어간
SELECT *FROM emp WHERE ENAME LIKE '%AM%'; --이름이 AM이 들어간 이름 찾아라
SELECT *FROM  EMP WHERE ENAME LIKE '____S'; --글자 수가 5개이고 끝이 S로 끝나는 사람
-- LIKE에서 %,_ 이 있는데 _는 자릿수 한개를 갖는다. %는 글자 수 제한없음.

SELECT  *FROM  EMP WHERE  ENAME  LIKE '__A%';
